Title: S3 Metadata tables schema - Amazon Simple Storage Service

The S3 Metadata feature is in preview release for Amazon S3 and is subject to change.
Amazon S3 metadata tables contain rows and columns. Each row represents a mutation event that has
    created, updated, or deleted an object in your general purpose bucket. Most of these events are
    the result of various user actions, but some of these events are the result of actions taken by
    Amazon S3 on your behalf, such as S3 Lifecycle expirations or storage class transitions. 
S3 Metadata is an event-processing pipeline that is designed to keep the metadata table
    eventually consistent with what changes have occurred in your general purpose bucket. Be aware
    that by the time that S3 Metadata is notified that an object is created or updated, that object
    might already have been overwritten or deleted in the bucket. To create a row for an event, the
    object must still exist in the bucket at the time that S3 Metadata is notified of the event. 
The following is an example of a metadata table for a general purpose bucket named
    amzn-s3-demo-bucket: 
Metadata tables have the following schema:
bucket
key
sequence_number
The sequence number, which is an ordinal that's included in the records for a given
            object. To order records of the same bucket and key, you can sort on
              sequence_number. For a given bucket and key, a lexicographically larger
              sequence_number value implies that the record was introduced to the
            bucket more recently.
record_type
The type of this record, one of CREATE, UPDATE_METADATA,
            or DELETE.
CREATE records indicate that a new object (or a new version of the
              object) was written to the bucket.
UPDATE_METADATA records capture changes to mutable metadata for an
              existing object, such as the storage class or tags.
DELETE records indicate that this object (or this version of the
              object) has been deleted. When versioning is enabled, DELETE records
              represent either a delete marker or a permanent delete. Delete markers have a
                record_type value of DELETE and an
                is_delete_marker value of True. Permanent delete records
              have null values in all other columns except bucket, key,
                sequence_number, record_type,
                record_timestamp, and version_id. For more information,
              see Deleting object versions from a
				versioning-enabled bucket.
record_timestamp
The timestamp that's associated with this record.
version_id
The object's version ID. When you enable versioning on a bucket, Amazon S3 assigns a
              version number to objects that are added to the bucket. For more information, see
                Retaining multiple versions of objects with S3 Versioning.
Objects that are stored in your bucket before you set the versioning state have a
              version ID of null.
is_delete_marker
The object's delete marker status. If the object is a delete marker, this value is
                True. Otherwise, it's False. For more information, see
                Working with delete markers.
Rows that are added for delete markers have a record_type value of
                  DELETE, not UPDATE_METADATA. If the delete marker is
                created as the result of an S3 Lifecycle expiration, the requester
                value is s3.amazonaws.com.
size
The object size in bytes, not including the size of incomplete multipart uploads or
            object metadata. If is_delete_marker is True, the size is
            0. For more information, see System-defined object metadata.
last_modified_date
The object creation date or the last modified date, whichever is the latest. For
            multipart uploads, the object creation date is the date when the multipart upload is
            initiated. For more information, see System-defined object metadata.
e_tag
The entity tag (ETag), which is a hash of the object. The ETag reflects changes
            only to the contents of an object, not to its metadata. The ETag can be an MD5 digest of
            the object data. Whether the ETag is an MD5 digest depends on how the object was created
            and how it's encrypted. For more information, see Object in the
            Amazon S3 API Reference.
storage_class
The storage class thatâs used for storing the object. One of STANDARD,
              REDUCED_REDUNDANCY, STANDARD_IA, ONEZONE_IA,
              INTELLIGENT_TIERING, GLACIER, DEEP_ARCHIVE, or
              GLACIER_IR. For more information, see Understanding and managing Amazon S3 storage classes.
is_multipart
The object's upload type. If the object was uploaded as a multipart upload, this
            value is True. Otherwise, it's False. For more information,
            see Uploading and copying objects using multipart upload in Amazon S3.
encryption_status
The object's server-side encryption status, depending on what kind of encryption key is used:
              server-side encryption with Amazon S3 managed keys (SSE-S3), server-side encryption with
              AWS Key Management Service (AWS KMS) keys (SSE-KMS), dual-layer server-side encryption with
              AWS KMS keys (DSSE-KMS), or server-side encryption with customer-provided keys
              (SSE-C). If the object is unencrypted, this value is null. Possible values are
                SSE-S3, SSE-KMS, DSSE-KMS,
              SSE-C, or null. For more information, see Protecting data with encryption.
is_bucket_key_enabled
The object's S3 Bucket Key enablement status. If the object uses an S3 Bucket Key
            for SSE-KMS, this value is True. Otherwise, it's False. For
            more information, see Configuring an S3 Bucket Key at the object
        level.
kms_key_arn
The Amazon Resource Name (ARN) for the KMS key with which the object is encrypted,
              for rows where encryption_status is SSE-KMS or
                DSSE-KMS. If the object isn't encrypted with SSE-KMS or DSSE-KMS, the
              value is null. For more information, see Using server-side encryption with AWS KMS keys
            (SSE-KMS) and
                Using dual-layer server-side encryption with AWS KMS keys
            (DSSE-KMS).
If a row represents an object version that no longer existed at the time that a
                delete or overwrite event was processed, kms_key_arn contains a null
                value, even if the encryption_status column value is
                  SSE-KMS or DSSE-KMS.
checksum_algorithm
The algorithm thatâs used to create the checksum for the object, one of
                CRC64-NVME, CRC32, CRC32C, SHA1,
              or SHA256. If no checksum is present, this value is null. For more
              information, see Using supported checksum algorithms.
object_tags
The object tags that are associated with the object. Object tags are stored as a
              map of key-value pairs. If an object has no object tags, an empty map
              ({}) is stored. For more information, see Categorizing your storage using tags
If the record_type value is DELETE, the
                  object_tags column contains a null value. If the
                  record_type value is CREATE or
                  UPDATE_METADATA, rows that represent object versions that no longer
                existed at the time that a delete or overwrite event was processed will contain a
                null value in the object_tags column. 
user_metadata
The user metadata that's associated with the object. User metadata is stored as a
              map of key-value pairs. If an object has no user metadata, an empty map
                ({}) is stored. For more information, see User-defined object metadata. 
If the record_type value is DELETE, the
                  user_metadata column contains a null value. If the
                  record_type value is CREATE or
                  UPDATE_METADATA, rows that represent object versions that no longer
                existed at the time that a delete or overwrite event was processed will contain a
                null value in the user_metadata column.
requester
The AWS account ID of the requester or the AWS service principal that made the
            request.
source_ip_address
The source IP address of the request. For records that are generated by a user request, this
              column contains the source IP address of the request. For actions taken by Amazon S3 or
              another AWS service on behalf of the user, this column contains a null value.
request_id
The request ID that's associated with the request.
 Javascript is disabled or is unavailable in your browser.
To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.
Thanks for letting us know we're doing a good job!
If you've got a moment, please tell us what we did right so we can do more of it.

Thanks for letting us know this page needs work. We're sorry we let you down.
If you've got a moment, please tell us how we can make the documentation better.

