Title: Amazon EC2 instance types - Amazon EC2

When you launch an EC2 instance, the instance type that you specify
        determines the hardware of the host computer used for your instance. Each instance type
        offers different compute, memory, and storage capabilities, and is grouped in an instance
        family based on these capabilities. Select an instance type based on the requirements of the
        application or software that you plan to run on your instance.
Amazon EC2 dedicates some resources of the host computer, such as CPU, memory, and instance
        storage, to a particular instance. Amazon EC2 shares other resources of the host computer, such
        as the network and the disk subsystem, among instances. If each instance on a host computer
        tries to use as much of one of these shared resources as possible, each receives an equal
        share of that resource. However, when a resource is underused, an instance can consume a
        higher share of that resource while it's available.
Each instance type provides higher or lower minimum performance from a shared resource.
        For example, instance types with high I/O performance have a larger allocation of shared resources. 
        Allocating a larger share of shared resources also reduces the variance of I/O performance. 
        For most applications, moderate I/O performance is more than enough. However, for
        applications that require greater or more consistent I/O performance, consider
        an instance type with higher I/O performance.
Current generation instances
Previous generation instances
Amazon EC2 instance type naming conventions
Amazon EC2 instance type specifications
Instances built on the AWS Nitro System
Amazon EC2 instance type quotas
For the best performance, we recommend that you use the following instance types
            when you launch new instances. For more information, see Amazon EC2 Instance Types.
General purpose: M5 | M5a | M5ad | M5d | M5dn | M5n | M5zn | M6a | M6g | M6gd | M6i | M6id | M6idn | M6in | M7a | M7g | M7gd | M7i | M7i-flex | M8g | Mac1 | Mac2 | Mac2-m1ultra | Mac2-m2 | Mac2-m2pro | T2 | T3 | T3a | T4g
Compute optimized: C5 | C5a | C5ad | C5d | C5n | C6a | C6g | C6gd | C6gn | C6i | C6id | C6in | C7a | C7g | C7gd | C7gn | C7i | C7i-flex | C8g
Memory optimized: R5 | R5a | R5ad | R5b | R5d | R5dn | R5n | R6a | R6g | R6gd | R6i | R6idn | R6in | R6id | R7a | R7g | R7gd | R7i | R7iz | R8g | U-3tb1 | U-6tb1 | U-9tb1 | U-12tb1 | U-18tb1 | U-24tb1 | U7i-6tb | U7i-8tb | U7i-12tb | U7in-16tb | U7in-24tb | U7in-32tb | X1 | X1e | X2gd | X2idn | X2iedn | X2iezn | X8g | z1d
Storage optimized: D2 | D3 | D3en | H1 | I3 | I3en | I4g | I4i | I7ie | I8g | Im4gn | Is4gen
Accelerated computing: DL1 | DL2q | F1 | G4ad | G4dn | G5 | G5g | G6 | G6e | Gr6 | Inf1 | Inf2 | P2 | P3 | P3dn | P4d | P4de | P5 | P5e | P5en | Trn1 | Trn1n | Trn2 | Trn2u | VT1
High-performance computing: Hpc6a | Hpc6id | Hpc7a | Hpc7g
Amazon Web Services offers previous generation instance types for users who have optimized their
            applications around them and have yet to upgrade. We encourage you to use current generation 
            instance types to get the best performance, but we continue to support the following previous 
            generation instance types. For more information about which current 
                generation instance type would be a suitable upgrade, see 
                    Previous Generation Instances.
General purpose: A1 | M1 | M2 | M3 | M4 | T1
Compute optimized: C1 | C3 | C4
Memory optimized: R3 | R4
Storage optimized: I2
Accelerated computing: G3
Fixed performance instances provide fixed CPU resources. These instances can
                deliver and sustain full CPU performance at any time, and for as long as a workload
                needs it. If you need consistently high CPU performance for applications such as
                video encoding, high volume websites, or HPC applications, we recommend that you use
                fixed performance instances.
Burstable performance (T) instances provide a baseline level of CPU
                performance with the ability to burst above the baseline. The baseline CPU is
                designed to meet the needs of the majority of general purpose workloads, such as
                large-scale micro-services, web servers, small and medium databases, data logging,
                code repositories, virtual desktops, and development and test environments.
The baseline utilization and ability to burst are governed by CPU credits. Each
            burstable performance instance continuously earns credits when it stays below the CPU
            baseline, and continuously spends credits when it bursts above the baseline. For more
            information, see Burstable
                performance instances in the Amazon EC2 User Guide.
M7i-flex and C7i-flex instances offer a balance of compute, memory, and network
                resources, and they provide the most cost-effective way to run a broad spectrum of
                general purpose applications. These instances provide reliable CPU resources to
                deliver a baseline CPU performance of 40 percent, which is designed to meet the
                compute requirements for a majority of general purpose workloads. When more
                performance is needed, these instances provide the ability to exceed the baseline
                CPU performance and deliver up to 100 percent CPU performance for 95 percent of the
                time over a 24-hour window.
M7i-flex and C7i-flex instances running at a high CPU utilization that is consistently
            above the baseline for long periods of time might see a gradual reduction in the maximum
            burst CPU throughput. For more information, see M7i-flex instances and C7i-flex instances.
For pricing information, see Amazon EC2 Pricing.
 Javascript is disabled or is unavailable in your browser.
To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.
Thanks for letting us know we're doing a good job!
If you've got a moment, please tell us what we did right so we can do more of it.

Thanks for letting us know this page needs work. We're sorry we let you down.
If you've got a moment, please tell us how we can make the documentation better.

